---
interface Props {
  title: string;
}

// const { title } = Astro.props;

import i18next, { t } from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";
import Header from "../components/Header.astro";
import BackToTop from "../components/BackToTop.astro";
import Footer from "../components/Footer.astro";
---

<!doctype html>
<html lang={i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <meta name="description" content={t("site.description")} />

    <link rel="icon" type="image/png" href="/house2.png" />

    <HeadHrefLangs />

    <title>{t("site.title")}</title>
  </head>
  <body id="app">
    <Header />
    <main>
      <slot />
    </main>
    <BackToTop />
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --accent: rgb(24, 133, 117);
    --secondary: rgb(229, 163, 65);
    --white: rgb(230, 230, 232);
    --black: rgb(18, 18, 18);
    --beige: rgb(225, 205, 180);
    --border: rgb(38 38 38 / 0.35);
    --radius: 0.75rem;
    --border-size: 2px;

    --light-background: var(--white);
    --light-foreground: var(--black);
    --dark-background: var(--black);
    --dark-foreground: var(--white);

    --background: var(--dark-background);
    --foreground: var(--dark-foreground);

    --linear-gradient: linear-gradient(
      90deg,
      var(--foreground) 0%,
      var(--beige) 33%,
      var(--secondary) 66%,
      var(--accent) 100%
    );

    /* Spacings */
    --space-xs: 0.25rem;
    --space-sm: 0.5rem;
    --space-md: 1rem;
    --space-lg: 1.5rem;
    --space-xl: 2rem;
    --space-2xl: 4rem;

    color-scheme: light dark;
    background-color: var(--background);
    color: var(--foreground);

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
    line-height: 1.5;
    font-weight: 400;
  }

  #app {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-md);
    text-align: center;

    main {
      padding-bottom: 300px;
    }
  }

  a {
    font-weight: 600;
    text-decoration: inherit;
    color: inherit;
  }

  li {
    list-style-type: none;
  }

  @media (prefers-color-scheme: light) {
    :root {
      --background: var(--light-background);
      --foreground: var(--light-foreground);
    }
  }

  ::selection {
    background-color: var(--accent);
    color: var(--background);
  }

  /* 
  Animations 
*/
  @keyframes textShine {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 100% 100%;
    }
  }

  @keyframes shake {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(18deg);
    }
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    45% {
      transform: rotate(10deg);
    }
    55% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }

  @keyframes buttonShine {
    from {
      background-position: 0 0;
    }
    to {
      background-position: -200% 0;
    }
  }

  @keyframes rotate {
    to {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  const header = document.querySelector("header");
  const experienceSection = document.querySelector("#experience__section");

  let lastScrollY = window.scrollY;

  function handleScroll() {
    const currentScrollY = window.scrollY;
    const experienceSectionTop =
      experienceSection!.getBoundingClientRect().top + window.scrollY;

    if (
      currentScrollY > lastScrollY &&
      currentScrollY > experienceSectionTop - 100
    ) {
      header!.classList.add("hidden");
    } else if (
      currentScrollY < lastScrollY ||
      currentScrollY < experienceSectionTop - 200
    ) {
      header!.classList.remove("hidden");
    }

    lastScrollY = currentScrollY;
  }

  window.addEventListener("scroll", handleScroll);
</script>
